# Generated by Django 5.1.2 on 2024-11-26 04:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('maintenance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MachineTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='live_game_test', to='maintenance.slotmachinemaintenanceform')),
            ],
        ),
        migrations.CreateModel(
            name='BetWin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bet', models.DecimalField(decimal_places=2, max_digits=10)),
                ('won', models.DecimalField(decimal_places=2, max_digits=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('casino_test_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bet_win', to='live_game_test.machinetest')),
            ],
        ),
        migrations.CreateModel(
            name='ProgressiveAfter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_name', models.CharField(blank=True, help_text='Name or identifier for the progressive pool after maintenance.', max_length=255, null=True)),
                ('level', models.PositiveIntegerField(blank=True, default=1, help_text='Level of the progressive meter after maintenance (e.g., 1 for Grand, 2 for Major).', null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, help_text='Dollar amount after maintenance.', max_digits=10, null=True)),
                ('casino_test_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progressive_pools_after', to='live_game_test.machinetest')),
            ],
        ),
        migrations.CreateModel(
            name='ProgressiveBefore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pool_name', models.CharField(blank=True, help_text='Name or identifier for the progressive pool before maintenance.', max_length=255, null=True)),
                ('level', models.PositiveIntegerField(blank=True, default=1, help_text='Level of the progressive meter before maintenance (e.g., 1 for Grand, 2 for Major).', null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=2, help_text='Dollar amount before maintenance.', max_digits=10, null=True)),
                ('casino_test_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progressive_pools_before', to='live_game_test.machinetest')),
            ],
        ),
        migrations.CreateModel(
            name='SoftGMUAfter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('non_cashable_promo_in', models.DecimalField(blank=True, decimal_places=2, help_text='After value of non-cashable promo in', max_digits=10, null=True)),
                ('cashable_promo_in', models.DecimalField(blank=True, decimal_places=2, help_text='After value of cashable promo in', max_digits=10, null=True)),
                ('non_cashable_promo_out', models.DecimalField(blank=True, decimal_places=2, help_text='After value of non-cashable promo out', max_digits=10, null=True)),
                ('coin_in_bets', models.DecimalField(blank=True, decimal_places=2, help_text='After value of coin-in bets', max_digits=10, null=True)),
                ('coin_out_wins', models.DecimalField(blank=True, decimal_places=2, help_text='After value of coin-out wins', max_digits=10, null=True)),
                ('jackpot_handpaid', models.DecimalField(blank=True, decimal_places=2, help_text='After value of jackpot handpaid', max_digits=10, null=True)),
                ('cash_ticket_in', models.DecimalField(blank=True, decimal_places=2, help_text='After value of cash ticket in', max_digits=10, null=True)),
                ('cash_ticket_out', models.DecimalField(blank=True, decimal_places=2, help_text='After value of cash ticket out', max_digits=10, null=True)),
                ('fives', models.IntegerField(blank=True, help_text='After value for $5 bills', null=True)),
                ('tens', models.IntegerField(blank=True, help_text='After value for $10 bills', null=True)),
                ('twenties', models.IntegerField(blank=True, help_text='After value for $20 bills', null=True)),
                ('fifties', models.IntegerField(blank=True, help_text='After value for $50 bills', null=True)),
                ('hundreds', models.IntegerField(blank=True, help_text='After value for $100 bills', null=True)),
                ('player_tracking', models.IntegerField(blank=True, help_text='Player tracking value after', null=True)),
                ('casino_test_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='soft_gmu_after', to='live_game_test.machinetest')),
            ],
        ),
        migrations.CreateModel(
            name='SoftGMUBefore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('non_cashable_promo_in', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of non-cashable promo in', max_digits=10, null=True)),
                ('cashable_promo_in', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of cashable promo in', max_digits=10, null=True)),
                ('non_cashable_promo_out', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of non-cashable promo out', max_digits=10, null=True)),
                ('coin_in_bets', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of coin-in bets', max_digits=10, null=True)),
                ('coin_out_wins', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of coin-out wins', max_digits=10, null=True)),
                ('jackpot_handpaid', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of jackpot handpaid', max_digits=10, null=True)),
                ('cash_ticket_in', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of cash ticket in', max_digits=10, null=True)),
                ('cash_ticket_out', models.DecimalField(blank=True, decimal_places=2, help_text='Before value of cash ticket out', max_digits=10, null=True)),
                ('fives', models.IntegerField(blank=True, help_text='Before value for $5 bills', null=True)),
                ('tens', models.IntegerField(blank=True, help_text='Before value for $10 bills', null=True)),
                ('twenties', models.IntegerField(blank=True, help_text='Before value for $20 bills', null=True)),
                ('fifties', models.IntegerField(blank=True, help_text='Before value for $50 bills', null=True)),
                ('hundreds', models.IntegerField(blank=True, help_text='Before value for $100 bills', null=True)),
                ('player_tracking', models.IntegerField(blank=True, help_text='Player tracking value before', null=True)),
                ('casino_test_record', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='soft_gmu_before', to='live_game_test.machinetest')),
            ],
        ),
        migrations.CreateModel(
            name='TestParameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('points', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('denom_5', models.BooleanField(default=False)),
                ('denom_10', models.BooleanField(default=False)),
                ('denom_20', models.BooleanField(default=False)),
                ('denom_50', models.BooleanField(default=False)),
                ('denom_100', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('casino_test_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_parameters', to='live_game_test.machinetest')),
            ],
        ),
    ]
